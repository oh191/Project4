/**
 * <h1>Drone</h1> Represents a Drone
 *
 * @author Junseok
 * @author JJaved
 * @version 12-03-18
 */

public class Drone extends Vehicle implements Profitable {

    final double gasRate = 1.33;

    public Drone() {
        super();
    }


    public Drone(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }


    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Truck.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.33)
     * </p>
     */
    @Override
    public double getProfit() {
        double difference = getMaxRange() * gasRate;
        double sum = super.getProfit();

        return sum - difference;


    }

    /**
     * Generates a String of the Drone report. Drone report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {
        if (getCurrentWeight() != 0) {
            String output = "==========Drone Report==========\n";
            output += String.format("License Plate No.: %s\n" +
                            "Destination: %d\n" +
                            "Weight Load: %.2f/%.2f\n", getLicensePlate(), getZipDest(),
                    getCurrentWeight(), getMaxWeight());
            if (getProfit() < 0) {
                output += String.format("Net Profit: ($%.2f)\n", -1 * getProfit());
            } else {
                output += String.format("Net Profit: $%.2f\n", getProfit());
            }
            for (Package packa : getPackages()) {
                output += "=====Shipping Labels=====\n";

                output += packa.shippingLabel();

            }
            output += "\n==============================" + "\n";
            return output;
        } else {
            return "";
        }
    }

    public int getMaxRange() {
        return maxRange;
    }
}