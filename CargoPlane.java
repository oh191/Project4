import java.util.ArrayList;


/**
 * <h1>CargoPlane</h1> Represents a Cargo Plane
 */
public class CargoPlane extends Vehicle {
    final double GAS_RATE = 2.33;

    private String licensePlate;
    private double maxWeight;
    private double currentWeight;
    private int zipDest;
    private ArrayList<Package> packages;


    /**
     * Default Constructor
     */
    //============================================================================

    public CargoPlane() {
        this.licensePlate = "";
        this.maxWeight = 0.0;
        this.currentWeight = 0.0;
        this.zipDest = 0;
        this.packages = new ArrayList<>();

    }


    public CargoPlane(String licensePlate , double maxWeight) {
        super();
        this.licensePlate = licensePlate;
        this.maxWeight = maxWeight;

    }

    //============================================================================

    /**
     * Overides its superclass method. Instead, after each iteration, the range will
     * increase by 10.
     *
     * @param warehousePackages List of packages to add from
     */
    @Override
    public void fill(ArrayList<Package> warehousePackages) {
    	//TODO

    }

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Cargo Plane.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 2.33)
     * </p>
     */
    @Override
    public double getProfit() {
        double price = 0.0;
        double differ = 23.3;
        CargoPlane cargoPlane = new CargoPlane();
        ArrayList<Package> packageArrayList = cargoPlane.packages;

        for (Package pack : packageArrayList) {
            price += pack.getPrice();


        }


        return price - differ;

    }

    /**
     * Generates a String of the Cargo Plane report. Cargo plane report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in cargo plane</li>
     * </ul>
     *
     * @return Cargo Plane Report
     */
    @Override
    public String report() {
        CargoPlane cargoPlane= new CargoPlane();

        String output = "==========Cargo Plane Report==========\n";
        output += "License Plate No.: " + cargoPlane.getLicensePlate() + "\n" ;
        output += "Destination: " + cargoPlane.getZipDest() + "\n";
        output += "Weight Load: " + cargoPlane.getCurrentWeight() + "/" + cargoPlane.getMaxWeight() + "\n";
        output += "Net Profit: (" +  getProfit() + ")" + "\n";
        output += "==============================" + "\n";
        ArrayList<Package> cargoPlanePackages = cargoPlane.getPackages();
        for (Package packages : cargoPlanePackages) {
            output += "=====Shipping Labels=====\n";

            output += packages.shippingLabel();

        }

        return output;


    }



}