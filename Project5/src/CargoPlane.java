import java.util.ArrayList;


/**
 * <h1>CargoPlane</h1> Represents a Cargo Plane
 *
 * @author Junseok
 * @author JJaved
 * @version 12-03-18
 */
public class CargoPlane extends Vehicle implements Profitable {
    final double GAS_RATE = 2.33;

    /**
     * Default Constructor
     */
    //============================================================================
    public CargoPlane() {
        super();
    }


    public CargoPlane(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);

    }

    //============================================================================

    /**
     * Overides its superclass method. Instead, after each iteration, the range will
     * increase by 10.
     *
     * @param warehousePackages List of packages to add from
     */

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Cargo Plane.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 2.33)
     * </p>
     */
    public double getProfit() {


        double range = super.getMaxRange() * 10;
        double difference = range * GAS_RATE;
        double sum = 0.0;

        for (Package p : super.getPackages()) {
            sum += p.getPrice();
        }

        return sum - difference;
    }

    /**
     * Generates a String of the Cargo Plane report. Cargo plane report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in cargo plane</li>
     * </ul>
     *
     * @return Cargo Plane Report
     */
    public String report() {
        if (getCurrentWeight() != 0) {
            String output = "==========Cargo Plane Report==========\n";
            output += String.format("License Plate No.: %s\n" +
                    "Destination: %d\n" +
                    "Weight Load: %.2f/%.2f\n" +
                    "Net Profit: $%.2f\n", getLicensePlate(), getZipDest(), getCurrentWeight(), getMaxWeight(), getProfit());

            for (Package packa : super.getPackages()) {
                output += "=====Shipping Labels=====\n";

                output += packa.shippingLabel();

            }
            output += "\n==============================" + "\n";
            return output;

        } else {
            return "";
        }
    }


}